{"title":"JavaEE-JDBC","uid":"5266ba7c44bc6a4ce52e58d685fe4590","slug":"JavaEE-JDBC","date":"2025-05-17T06:54:49.885Z","updated":"2025-05-17T07:45:18.315Z","comments":true,"path":"api/articles/JavaEE-JDBC.json","keywords":null,"cover":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/blog%20%E5%9B%BE%E7%89%87/5b7d348c994a936d0558f984b4876189%281%29.jpg","content":"<h1 id=\"JavaEE-JDBC\"><a href=\"#JavaEE-JDBC\" class=\"headerlink\" title=\"JavaEE-JDBC\"></a>JavaEE-JDBC</h1><h2 id=\"什么是-JDBC？\"><a href=\"#什么是-JDBC？\" class=\"headerlink\" title=\"什么是 JDBC？\"></a>什么是 JDBC？</h2><p>Java 数据库连接，（Java Database Connectivity，简称 JDBC）是 Java 语言中用来规范客户端程序如何来访问数据库的应用程序接口，提供了诸如查询和更新数据库中数据的方法。JDBC 也是 Sun Microsystems 的商标。我们通常说的 JDBC 是面向关系型数据库的。</p>\n<p>简而言之，JDBC 就是 JDK 提供的关于数据库操作的一套接口规范，不同数据库厂商来负责实现这个接口，完成指定的操作。</p>\n<p>用程序和数据建立连接，分为三步骤：</p>\n<ol>\n<li><p>连接数据库</p>\n</li>\n<li><p>执行 SQL 语句</p>\n</li>\n<li><p>把查询到的结果集转换成 JAVA 对象</p>\n</li>\n</ol>\n<p>安装 mysql-connector-java.jar 文件</p>\n<p>下载地址（官网）：MySQL :: Download Connector&#x2F;J</p>\n<p>（1）加载驱动程序（通过反射找到对应的 re 包）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 加载Oracle“驱动类” SPI</span></span><br><span class=\"line\">Class.forName(<span class=\"string\">&quot;oracle.jdbc.driver.OracleDriver&quot;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//加载MySql驱动 SPI</span></span><br><span class=\"line\">Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>（2）获取数据库连接：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建“URL连接字符串”。格式：jdbc:oracle:thin:@ 主机名/IP : 端口号 ：服务名称</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;jdbc:oracle:thin:@ip:1521:sid&quot;</span>;  <span class=\"comment\">//oracle</span></span><br><span class=\"line\"><span class=\"comment\">//jdbc:mysql://ip:3306:sid   //mysql</span></span><br><span class=\"line\"><span class=\"comment\">//jdbc:micronsoft:sqlserver://ip:1433:sid    //SqlServer</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 创建“用户名”</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;scott&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 创建“密码”</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;123456&quot;</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 初始化“数据库连接对象”</span></span><br><span class=\"line\"><span class=\"type\">Connection</span> <span class=\"variable\">conn</span> <span class=\"operator\">=</span> DriverManager.getConnection(url, username, password);</span><br></pre></td></tr></table></figure>\n<p>（3）Statement 对象（对静态 sql 的执行）</p>\n<p>Statement 对象可以用来执行 SQL 语句，使用 executeQuery 执行查询语句，返回结果集，使用 executeUpdate 执行增删改，返回操作的行数。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Statement</span> <span class=\"variable\">statement</span> <span class=\"operator\">=</span> conn.createStatement();</span><br></pre></td></tr></table></figure>\n<p>（4）结果 ResultSet 进行提取</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;select * from users&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">ResultSet</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> statement.executeQuery(sql);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//取出值</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(rs.next())&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> id=rs.getInt(columnLabel:<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">    String name=rs.getString(columnLabel:<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JDBC 预编译</p>\n<p>在 JDBC 中，预编译指的是使用 PreparedStatement 接口来执行 SQL 语句</p>\n<ul>\n<li>性能提升：预编译的 SQL 语句只需要解析一次，可以重复执行多次，减少了数据库解析 SQL 的时间。</li>\n<li>参数化查询：预编译的 SQL 语句可以使用占位符（?）代替实际值，这使得相同的 SQL 语句可以使用不同的参数值执行。</li>\n<li>防止 SQL 注入：预编译的 SQL 语句可以自动转义特殊字符，从而防止 SQL 注入攻击。</li>\n</ul>\n<p>创建预编译 Statement，并把 sql 语句传入，此时 sql 语句已与此 prepareStatement 绑定，所以执行语句时无需再把 sql 语句作为参数传入 execute ()。</p>\n<p>定义预编译的 sql 语句，其中待填入的参数用？占位。注意，? 无关类型，不需要加分号之类。其具体数据类型在下面 setXX（）时决定</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;insert into student(id,name,passwd) values(?,?,?)&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">PreparedStatement</span> <span class=\"variable\">ps</span> <span class=\"operator\">=</span> conn.prepareStatement(sql);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//填入具体参数。通过setXX(问号下标，数值）来为sql语句填入具体数据。注意：问号下标从1开始，setXX与数值类型有关，字符串就是setString（index，str）.</span></span><br><span class=\"line\">ps.setInt(<span class=\"number\">1</span>, id);</span><br><span class=\"line\">ps.setString(<span class=\"number\">2</span>, user);</span><br><span class=\"line\">ps.setInt(<span class=\"number\">3</span>, passwd);</span><br></pre></td></tr></table></figure>","text":"JavaEE-JDBC什么是 JDBC？Java 数据库连接，（Java Database Connectivity，简称 JDBC）是 Java 语言中用来规...","permalink":"/post/JavaEE-JDBC","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"Java基础知识","slug":"Java基础知识","count":5,"path":"api/categories/Java基础知识.json"}],"tags":[{"name":"Java基础","slug":"Java基础","count":5,"path":"api/tags/Java基础.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JavaEE-JDBC\"><span class=\"toc-text\">JavaEE-JDBC</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF-JDBC%EF%BC%9F\"><span class=\"toc-text\">什么是 JDBC？</span></a></li></ol></li></ol>","author":{"name":"Hao","slug":"blog-author","avatar":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/ppp/64966b30e1c9375e8dbb11146ea9c12f.jpg","link":"/","description":"山高自有客行路，水深自有渡船认 The future is like the sea and three will be a long time to come","socials":{"github":"https://github.com/isMyHao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/2401_87971103?spm=1000.2115.3001.10640","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"JavaEE-序列化和反序列化","uid":"83b6c2550820553f88f46482ca935e4b","slug":"Java-序列化与反序列化","date":"2025-05-17T07:05:36.238Z","updated":"2025-05-17T07:44:26.419Z","comments":true,"path":"api/articles/Java-序列化与反序列化.json","keywords":null,"cover":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/blog%20%E5%9B%BE%E7%89%87/5a2feebf-6337-4e42-bbe7-5fe43ef7aca4.jpg","text":"Java-序列化与反序列化序列化和反序列化的应用： 两个进程在远程通信时，可以发送多种数据，包括文本、图片、音频、视频等，这些数据都是以二进制序列的形式在网络上...","permalink":"/post/Java-序列化与反序列化","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"Java基础知识","slug":"Java基础知识","count":5,"path":"api/categories/Java基础知识.json"}],"tags":[{"name":"Java基础","slug":"Java基础","count":5,"path":"api/tags/Java基础.json"}],"author":{"name":"Hao","slug":"blog-author","avatar":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/ppp/64966b30e1c9375e8dbb11146ea9c12f.jpg","link":"/","description":"山高自有客行路，水深自有渡船认 The future is like the sea and three will be a long time to come","socials":{"github":"https://github.com/isMyHao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/2401_87971103?spm=1000.2115.3001.10640","juejin":"","customs":{}}}},"next_post":{"title":"JavaEE-拦截器和过滤器","uid":"6a0096bd641aa89e7faa8db26f66389c","slug":"Java-过滤器","date":"2025-05-17T06:46:19.943Z","updated":"2025-05-17T07:44:32.837Z","comments":true,"path":"api/articles/Java-过滤器.json","keywords":null,"cover":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/blog%20%E5%9B%BE%E7%89%87/5b7d348c994a936d0558f984b4876189.jpg","text":"JavaEE-拦截器和过滤器过滤器（Filter）：过滤器 JavaWeb 三大组件之一，它与 Servlet 很相似！过滤器是用来拦截请求的，而不是处理请求的...","permalink":"/post/Java-过滤器","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"Java基础知识","slug":"Java基础知识","count":5,"path":"api/categories/Java基础知识.json"}],"tags":[{"name":"Java基础","slug":"Java基础","count":5,"path":"api/tags/Java基础.json"}],"author":{"name":"Hao","slug":"blog-author","avatar":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/ppp/64966b30e1c9375e8dbb11146ea9c12f.jpg","link":"/","description":"山高自有客行路，水深自有渡船认 The future is like the sea and three will be a long time to come","socials":{"github":"https://github.com/isMyHao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/2401_87971103?spm=1000.2115.3001.10640","juejin":"","customs":{}}}}}