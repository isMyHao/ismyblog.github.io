{"title":"云攻防-K8S搭建","uid":"057dca3af5aa739fb2629cb762787844","slug":"云攻防-k8s搭建","date":"2025-05-17T09:03:45.056Z","updated":"2025-05-21T14:29:04.246Z","comments":true,"path":"api/articles/云攻防-k8s搭建.json","cover":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/blog%20%E5%9B%BE%E7%89%87/07d4681d-b7f1-4d6f-b718-c01399944150.jpg","content":"<h1 id=\"云攻防-k8s手动搭建\"><a href=\"#云攻防-k8s手动搭建\" class=\"headerlink\" title=\"云攻防-k8s手动搭建\"></a>云攻防-k8s手动搭建</h1><p>参考视频：<br><a href=\"https://www.bilibili.com/video/BV1P17fzBES1?spm_id_from=333.788.videopod.episodes&vd_source=89bf25153801ebc942aaf90aa2af1675&p=5\">https://www.bilibili.com/video/BV1P17fzBES1?spm_id_from=333.788.videopod.episodes&amp;vd_source=89bf25153801ebc942aaf90aa2af1675&amp;p=5</a><br>看官网搭建：<br><a href=\"https://kubernetes.io/zh-cn/docs/tasks/tools/install-kubectl-linux/\">https://kubernetes.io/zh-cn/docs/tasks/tools/install-kubectl-linux/</a></p>\n<p>国内网络环境 优化的 CentOS 7 部署 Kubernetes 集群详细步骤,及常见问题</p>\n<h2 id=\"一、环境准备（所有节点执行）\"><a href=\"#一、环境准备（所有节点执行）\" class=\"headerlink\" title=\"一、环境准备（所有节点执行）\"></a>一、环境准备（所有节点执行）</h2><h3 id=\"1-配置主机名与-hosts-解析\"><a href=\"#1-配置主机名与-hosts-解析\" class=\"headerlink\" title=\"1. 配置主机名与 hosts 解析\"></a>1. 配置主机名与 hosts 解析</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Master 节点</span></span><br><span class=\"line\">hostnamectl set-hostname k8s-master</span><br><span class=\"line\"><span class=\"meta prompt_\"> </span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Worker 节点（如 node1）</span></span><br><span class=\"line\">hostnamectl set-hostname k8s-node1</span><br><span class=\"line\"><span class=\"meta prompt_\"> </span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">所有节点编辑 /etc/hosts</span></span><br><span class=\"line\">cat &lt;&lt;EOF &gt;&gt; /etc/hosts</span><br><span class=\"line\">&lt;Master节点内网IP&gt; k8s-master</span><br><span class=\"line\">&lt;Worker节点内网IP&gt; k8s-node1</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-关闭防火墙、SELinux-和-Swap\"><a href=\"#2-关闭防火墙、SELinux-和-Swap\" class=\"headerlink\" title=\"2. 关闭防火墙、SELinux 和 Swap\"></a>2. 关闭防火墙、SELinux 和 Swap</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld &amp;&amp; systemctl disable firewalld</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\">sed -i &#x27;s/^SELINUX=enforcing$/SELINUX=permissive/&#x27; /etc/selinux/config</span><br><span class=\"line\">swapoff -a</span><br><span class=\"line\">sed -i &#x27;/ swap / s/^\\(.*\\)$/#\\1/g&#x27; /etc/fstab  # 永久关闭 Swap</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-配置内核参数\"><a href=\"#3-配置内核参数\" class=\"headerlink\" title=\"3. 配置内核参数\"></a>3. 配置内核参数</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;EOF &gt; /etc/sysctl.d/k8s.conf</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 1</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sysctl --system</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-加载内核模块\"><a href=\"#4-加载内核模块\" class=\"headerlink\" title=\"4. 加载内核模块\"></a>4. 加载内核模块</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">modprobe br_netfilter</span><br><span class=\"line\">modprobe overlay</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、安装容器运行时（所有节点执行）\"><a href=\"#二、安装容器运行时（所有节点执行）\" class=\"headerlink\" title=\"二、安装容器运行时（所有节点执行）\"></a>二、安装容器运行时（所有节点执行）</h2><p>CentOS 7 yum 无法使用</p>\n<p>CentOS 7 仓库已经被归档，当前的镜像地址无法找到所需的文件。CentOS 7 的官方支持已经结束，部分仓库已被移至归档库。这导致了 yum 命令无法找到所需的元数据文件。CentOS 7 的官方仓库在 2024 年 6 月 30 日之后已经停止维护。因此，使用最新的 CentOS 7 官方仓库可能会遇到问题。</p>\n<p>参考文章：</p>\n<p><a href=\"https://blog.csdn.net/weixin_68792404/article/details/147272888\">https://blog.csdn.net/weixin_68792404/article/details/147272888</a></p>\n<p>解决方法:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd /etc/yum.repos.d</span><br><span class=\"line\">cp  CentOS-Base.repo   CentOS-Base.repo.backup</span><br><span class=\"line\">vi CentOS-Base.repo</span><br><span class=\"line\">修改内容</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">CentOS-Base.repo</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># The mirror system uses the connecting IP address of the client and the</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">update status of each mirror to pick mirrors that are updated to and</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">geographically close to the client.  You should use this <span class=\"keyword\">for</span> CentOS updates</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">unless you are manually picking other mirrors.</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># If the mirrorlist= does not work for you, as a fall back you can try the</span></span> </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">remarked out baseurl= line instead.</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\">#</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\">[base]</span><br><span class=\"line\">name=CentOS-$releasever - Base</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">mirrorlist=http://mirrorlist.centos.org/?release=<span class=\"variable\">$releasever</span>&amp;<span class=\"built_in\">arch</span>=<span class=\"variable\">$basearch</span>&amp;repo=os&amp;infra=<span class=\"variable\">$infra</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">baseurl=http://mirror.centos.org/centos/<span class=\"variable\">$releasever</span>/os/<span class=\"variable\">$basearch</span>/</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">baseurl=http://vault.centos.org/7.9.2009/x86_64/os/</span></span><br><span class=\"line\">baseurl=http://vault.centos.org/7.9.2009/os/$basearch/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">released updates</span> </span><br><span class=\"line\">[updates]</span><br><span class=\"line\">name=CentOS-$releasever - Updates</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">mirrorlist=http://mirrorlist.centos.org/?release=<span class=\"variable\">$releasever</span>&amp;<span class=\"built_in\">arch</span>=<span class=\"variable\">$basearch</span>&amp;repo=updates&amp;infra=<span class=\"variable\">$infra</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">baseurl=http://mirror.centos.org/centos/<span class=\"variable\">$releasever</span>/updates/<span class=\"variable\">$basearch</span>/</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">baseurl=http://vault.centos.org/7.9.2009/x86_64/os/</span></span><br><span class=\"line\">baseurl=http://vault.centos.org/7.9.2009/updates/$basearch/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class=\"line\"><span class=\"meta prompt_\"> </span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">additional packages that may be useful</span></span><br><span class=\"line\">[extras]</span><br><span class=\"line\">name=CentOS-$releasever - Extras</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">mirrorlist=http://mirrorlist.centos.org/?release=<span class=\"variable\">$releasever</span>&amp;<span class=\"built_in\">arch</span>=<span class=\"variable\">$basearch</span>&amp;repo=extras&amp;infra=<span class=\"variable\">$infra</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"variable\">$baseurl</span>=http://mirror.centos.org/centos/<span class=\"variable\">$releasever</span>/extras/<span class=\"variable\">$basearch</span>/</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">baseurl=http://vault.centos.org/7.9.2009/x86_64/os/</span></span><br><span class=\"line\">baseurl=http://vault.centos.org/7.9.2009/extras/$basearch/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class=\"line\"><span class=\"meta prompt_\"> </span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">additional packages that extend functionality of existing packages</span></span><br><span class=\"line\">[centosplus]</span><br><span class=\"line\">name=CentOS-$releasever - Plus</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">mirrorlist=http://mirrorlist.centos.org/?release=<span class=\"variable\">$releasever</span>&amp;<span class=\"built_in\">arch</span>=<span class=\"variable\">$basearch</span>&amp;repo=centosplus&amp;infra=<span class=\"variable\">$infra</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">baseurl=http://mirror.centos.org/centos/<span class=\"variable\">$releasever</span>/centosplus/<span class=\"variable\">$basearch</span>/</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">baseurl=http://vault.centos.org/7.9.2009/x86_64/os/</span></span><br><span class=\"line\">baseurl=http://vault.centos.org/7.9.2009/centosplus/$basearch/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure>\n<p>保存后执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo yum clean all</span><br><span class=\"line\">sudo yum makecache</span><br></pre></td></tr></table></figure>\n<p>然后执行以下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class=\"line\"> </span><br><span class=\"line\">sudo yum clean all</span><br><span class=\"line\">sudo yum makecache</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-安装-Docker（国内镜像加速）\"><a href=\"#1-安装-Docker（国内镜像加速）\" class=\"headerlink\" title=\"1. 安装 Docker（国内镜像加速）\"></a>1. 安装 Docker（国内镜像加速）</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用阿里云 Docker 仓库</span></span><br><span class=\"line\">yum install -y yum-utils</span><br><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装指定版本 Docker</span></span><br><span class=\"line\">yum install -y docker-ce-20.10.23 docker-ce-cli-20.10.23 containerd.io</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">配置 Docker 镜像加速和 cgroup 驱动</span></span><br><span class=\"line\">mkdir -p /etc/docker</span><br><span class=\"line\">cat &lt;&lt;EOF &gt; /etc/docker/daemon.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [&quot;https://&lt;你的阿里云镜像加速地址&gt;.mirror.aliyuncs.com&quot;],</span><br><span class=\"line\">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class=\"line\">  &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class=\"line\">  &quot;log-opts&quot;: &#123;&quot;max-size&quot;: &quot;100m&quot;&#125;,</span><br><span class=\"line\">  &quot;storage-driver&quot;: &quot;overlay2&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动 Docker</span></span><br><span class=\"line\">systemctl enable docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、安装-Kubernetes-组件（所有节点执行）\"><a href=\"#三、安装-Kubernetes-组件（所有节点执行）\" class=\"headerlink\" title=\"三、安装 Kubernetes 组件（所有节点执行）\"></a>三、安装 Kubernetes 组件（所有节点执行）</h2><h3 id=\"1-配置阿里云-Kubernetes-仓库\"><a href=\"#1-配置阿里云-Kubernetes-仓库\" class=\"headerlink\" title=\"1. 配置阿里云 Kubernetes 仓库\"></a>1. 配置阿里云 Kubernetes 仓库</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name=Kubernetes</span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">repo_gpgcheck=0</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-安装-kubeadm、kubelet、kubectl\"><a href=\"#2-安装-kubeadm、kubelet、kubectl\" class=\"headerlink\" title=\"2. 安装 kubeadm、kubelet、kubectl\"></a>2. 安装 kubeadm、kubelet、kubectl</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">指定版本安装（示例版本 1.28.2）</span></span><br><span class=\"line\">yum install -y kubelet-1.28.2 kubeadm-1.28.2 kubectl-1.28.2 --disableexcludes=kubernetes</span><br><span class=\"line\"><span class=\"meta prompt_\"> </span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动 kubelet</span></span><br><span class=\"line\">systemctl enable kubelet &amp;&amp; systemctl start kubelet</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、初始化-Master-节点\"><a href=\"#四、初始化-Master-节点\" class=\"headerlink\" title=\"四、初始化 Master 节点\"></a>四、初始化 Master 节点</h2><p>安装网络插件:<br>使用containerd配置k8s</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">//没有文件可以创建/etc/containerd</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">mkdir</span> /etc/containerd</span></span><br><span class=\"line\">containerd config default &gt; /etc/containerd/config.tomlgrep sandboximage /etc/containerd/config.toml</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i &quot;s#k8s.gcr.io/pause#registry.aliyuncs.com/google containers/pause#g&quot; /etc/containerd/config.toml</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i &quot;s#registry.k8s.io/pause#registry.aliyuncs.com/google_containers/pause#g&quot; /etc/containerd/config.toml</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">配置containerd cgroup驱动程序systemd：</span></span><br><span class=\"line\">sed -i &#x27;s#Systemdcgroup =false#Systemdcgroup = true#g&#x27; /etc/containerd/config.toml</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">修改配置文件/etc/containerd/config.toml，145行添加config_path</span></span><br><span class=\"line\">144   [plugins.&quot;io.containerd.grpc.v1.cri&quot;.registry]</span><br><span class=\"line\">145        config_path=&quot;/etc/containerd/certs.d&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">创建对应目录</span></span><br><span class=\"line\">mkdir -p /etc/containerd/certs.d/docker.io</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">配置加速</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">配置阿里云镜像</span></span><br><span class=\"line\">cat &gt;/etc/containerd/certs.d/docker.io/hosts.toml &lt;&lt;EOF</span><br><span class=\"line\">server =&quot;https://docker.io&quot;</span><br><span class=\"line\">[host.&quot;https://ms9glx6x.mirror.aliyuncs.com&quot;]</span><br><span class=\"line\"> capabilities =[&quot;pull&quot;,&quot;resolve&quot;]</span><br><span class=\"line\">[host.&quot;https://docker.mirrors.ustc.edu.cn&quot;]</span><br><span class=\"line\"> capabilities =[&quot;pull&quot;,&quot;resolve&quot;]</span><br><span class=\"line\">[host.&quot;https://registry-1.docker.io&quot;]</span><br><span class=\"line\"> capabilities =[&quot;pull&quot;,&quot;resolve&quot; ,&quot;push&quot;]</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p>上面步骤所有节点都要操作</p>\n<p>只操作k8s-master，生成管理节点的组件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">kubeadm config print init-defaults &gt; kubeadm.yaml</span><br><span class=\"line\">kubeadm init --config kubeadm.yaml</span><br><span class=\"line\">vim kueadm.yaml</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">kueadm.yaml</span></span><br><span class=\"line\">advertiseAddress: 192.168.200.148   #更换为master主机ip</span><br><span class=\"line\">nodeRegistration:</span><br><span class=\"line\">  criSocket: unix:///var/run/containerd/containerd.sock</span><br><span class=\"line\">  imagePullPolicy: IfNotPresent</span><br><span class=\"line\">  name: k8s-master    #更换为master的主机名</span><br><span class=\"line\">imageRepository: registry.aliyuncs.com/google_containers  # 替换为国内镜像源</span><br><span class=\"line\">kubernetsVersion: 1.24.4   #改为本机安装的版本</span><br><span class=\"line\">在networking:下加入</span><br><span class=\"line\">podSubnet: 10.244.0.0/16  #添加pod子网</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">查看需要使用的镜像列表,若无问题，将得到如下列表</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">kubeadm config images list --config kubeadm.yaml</span></span><br><span class=\"line\">registry.aliyuncs.com/google </span><br><span class=\"line\">containers/kube-apiserver:v1.24.4registry.aliyuncs.com/google_containers/kube-controller-manager:v1.24.4</span><br><span class=\"line\">registry.aliyuncs.com/google containers/kube-scheduler:v1.24.4</span><br><span class=\"line\">registry.aliyuncs.com/google containers/kube-proxy:v1.24.4</span><br><span class=\"line\">registry.aliyuncs.com/google containers/pause:3.7</span><br><span class=\"line\">registry.aliyuncs.com/google containers/etcd:3.5.3-0</span><br><span class=\"line\">registry.aliyuncs.com/google containers/coredns:v1.8.6</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">提前下载镜像到本地</span></span><br><span class=\"line\">[root@k8s-master ~]#kubeadm config images pull --config kubeadm.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">[config/images] Pulled registry.aliyuncs.com/google containers/kube-apiserver:v1.24.4</span><br><span class=\"line\">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-controller-manager:v1.24.4</span><br><span class=\"line\">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-scheduler:v1.24.4</span><br><span class=\"line\">[config/images] Pulled registry.aliyuncs.com/google containers/kube-proxy:v1.24.4</span><br><span class=\"line\">[config/images] Pulled registry.aliyuncs.com/google containers/pause:3.7</span><br><span class=\"line\">[config/images] Pulled registry.aliyuncs.com/google containers/etcd:3.5.3-0</span><br><span class=\"line\">[config/images] Pulled registry.aliyuncs.com/google containers/coredns:v1.8.6</span><br><span class=\"line\">**配置 kubelet 使用 Docker**</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>初始化 master 节点</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">kubeadm init --config kubeadm.yaml</span><br></pre></td></tr></table></figure>\n<p>根据提示执行以下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">mkdir -p $HOME/.kube</span><br><span class=\"line\">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class=\"line\">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure>\n<p>会出现以下提示，将node节点加入到master中</p>\n<p>kubeadm token create –print-join-command 可以查看加入集群的命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">kubeadm join 192.168.200.148:6443 --token abcdef.0123456789abcdef \\</span><br><span class=\"line\">\t--discovery-token-ca-cert-hash sha256:9639e444338138f5324bb769ff4898f67e906d43471adeadf2459529f681ef2d </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">如果出现一种情况，检测到多个 CRI（容器运行时接口）端点，无法自动选择使用哪一个，需要指定CRI</span></span><br><span class=\"line\">--cri-socket unix:///var/run/containerd/containerd.sock #指定containerd</span><br></pre></td></tr></table></figure>\n<p>这样就成功加入到master集群中了</p>\n<p>由于它们是Noready状态，所以需要加入网络</p>\n<p><strong>安装网络插件:</strong><br>flannel安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">下载下来后，如果主机有多个网卡，需要指定网卡</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">修改配置文件，kube-flannel.yml</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">在文件的160行左右</span></span><br><span class=\"line\">args:</span><br><span class=\"line\">- --ip-masq</span><br><span class=\"line\">- --kube-subnet-mgr</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">添加以下代码</span></span><br><span class=\"line\">- --iface=ens33</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">kubectl apply -f kube-flannel.yml   #取下载镜像</span><br><span class=\"line\">kubectl -n kube-flannel get po -owide -w #等待初始化镜像的拉取</span><br></pre></td></tr></table></figure>\n\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki nord\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #616E88\"># vi kube-flannel.yml</span></span>\n<span class=\"line\"><span style=\"color: #88C0D0\">net-conf.json:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">|</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #88C0D0\">&quot;Network&quot;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">10.244</span><span style=\"color: #A3BE8C\">.0.0/16</span><span style=\"color: #D8DEE9FF\">   </span><span style=\"color: #616E88\">#需要与配置pod子网一致</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #88C0D0\">&quot;Backend&quot;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #A3BE8C\">&#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">&#125;</span></span></code></pre></div>","text":"云攻防-k8s手动搭建参考视频：https://www.bilibili.com/video/BV1P17fzBES1?spm_id_from=333.788....","permalink":"/post/云攻防-k8s搭建","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"云安全","slug":"云安全","count":3,"path":"api/categories/云安全.json"}],"tags":[{"name":"云安全","slug":"云安全","count":3,"path":"api/tags/云安全.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%91%E6%94%BB%E9%98%B2-k8s%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">云攻防-k8s手动搭建</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87%EF%BC%88%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E6%89%A7%E8%A1%8C%EF%BC%89\"><span class=\"toc-text\">一、环境准备（所有节点执行）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%85%8D%E7%BD%AE%E4%B8%BB%E6%9C%BA%E5%90%8D%E4%B8%8E-hosts-%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">1. 配置主机名与 hosts 解析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99%E3%80%81SELinux-%E5%92%8C-Swap\"><span class=\"toc-text\">2. 关闭防火墙、SELinux 和 Swap</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E9%85%8D%E7%BD%AE%E5%86%85%E6%A0%B8%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">3. 配置内核参数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%8A%A0%E8%BD%BD%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">4. 加载内核模块</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%AE%89%E8%A3%85%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6%EF%BC%88%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E6%89%A7%E8%A1%8C%EF%BC%89\"><span class=\"toc-text\">二、安装容器运行时（所有节点执行）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%AE%89%E8%A3%85-Docker%EF%BC%88%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F%EF%BC%89\"><span class=\"toc-text\">1. 安装 Docker（国内镜像加速）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%AE%89%E8%A3%85-Kubernetes-%E7%BB%84%E4%BB%B6%EF%BC%88%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E6%89%A7%E8%A1%8C%EF%BC%89\"><span class=\"toc-text\">三、安装 Kubernetes 组件（所有节点执行）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E4%BA%91-Kubernetes-%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">1. 配置阿里云 Kubernetes 仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%AE%89%E8%A3%85-kubeadm%E3%80%81kubelet%E3%80%81kubectl\"><span class=\"toc-text\">2. 安装 kubeadm、kubelet、kubectl</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E5%88%9D%E5%A7%8B%E5%8C%96-Master-%E8%8A%82%E7%82%B9\"><span class=\"toc-text\">四、初始化 Master 节点</span></a></li></ol></li></ol>","author":{"name":"Hao","slug":"blog-author","avatar":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/ppp/64966b30e1c9375e8dbb11146ea9c12f.jpg","link":"/","description":"山高自有客行路，水深自有渡船认 The future is like the sea and three will be a long time to come","socials":{"github":"https://github.com/isMyHao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/2401_87971103?spm=1000.2115.3001.10640","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"kubernetes-goat靶场","uid":"018a2a8f1c82adfd1221467a2a861fc0","slug":"kubernetes-goat靶场","date":"2025-05-20T12:33:38.723Z","updated":"2025-05-22T16:48:57.060Z","comments":true,"path":"api/articles/kubernetes-goat靶场.json","cover":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/blog%20%E5%9B%BE%E7%89%87/c160b854-1f3c-4901-9990-093288ad1c04.jpg","text":"kubernetes-goat靶场Kubernetes Goat 被设计成一个故意设置易受攻击的集群环境，用于学习和实践 Kubernetes 安全性 安装： ...","permalink":"/post/kubernetes-goat靶场","photos":[],"count_time":{"symbolsCount":"9k","symbolsTime":"8 mins."},"categories":[{"name":"靶场","slug":"靶场","count":1,"path":"api/categories/靶场.json"}],"tags":[{"name":"靶场","slug":"靶场","count":1,"path":"api/tags/靶场.json"}],"author":{"name":"Hao","slug":"blog-author","avatar":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/ppp/64966b30e1c9375e8dbb11146ea9c12f.jpg","link":"/","description":"山高自有客行路，水深自有渡船认 The future is like the sea and three will be a long time to come","socials":{"github":"https://github.com/isMyHao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/2401_87971103?spm=1000.2115.3001.10640","juejin":"","customs":{}}}},"next_post":{"title":"云攻防-自动化工具CDK","uid":"2d7ab8d810fa55a7f8f329a080d4b514","slug":"云攻防-自动化工具CDK","date":"2025-05-17T09:01:52.604Z","updated":"2025-05-17T09:03:14.960Z","comments":true,"path":"api/articles/云攻防-自动化工具CDK.json","cover":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/blog%20%E5%9B%BE%E7%89%87/03b0866b33895d638a5ad57f0285f8f7.jpg","text":"云攻防-自动化工具CDKhttps://github.com/cdk-team/CDK 概述 CDK 是一个开源的容器渗透工具包，旨在提供对各种精简容器的稳定利...","permalink":"/post/云攻防-自动化工具CDK","photos":[],"count_time":{"symbolsCount":147,"symbolsTime":"1 mins."},"categories":[{"name":"tools","slug":"tools","count":1,"path":"api/categories/tools.json"}],"tags":[{"name":"tools","slug":"tools","count":1,"path":"api/tags/tools.json"}],"author":{"name":"Hao","slug":"blog-author","avatar":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/ppp/64966b30e1c9375e8dbb11146ea9c12f.jpg","link":"/","description":"山高自有客行路，水深自有渡船认 The future is like the sea and three will be a long time to come","socials":{"github":"https://github.com/isMyHao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/2401_87971103?spm=1000.2115.3001.10640","juejin":"","customs":{}}}}}