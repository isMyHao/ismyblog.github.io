{"title":"Java安全-反序列化","uid":"834d897a9474839bf32abbfb577a6009","slug":"Java安全-反序列化","date":"2025-05-17T07:23:49.990Z","updated":"2025-05-17T07:44:50.053Z","comments":true,"path":"api/articles/Java安全-反序列化.json","keywords":null,"cover":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/blog%20%E5%9B%BE%E7%89%87/%23march7%20%23m7%20%23honkaistarrail%20%23hsr.jpg","content":"<h1 id=\"Java安全-反序列化\"><a href=\"#Java安全-反序列化\" class=\"headerlink\" title=\"Java安全-反序列化\"></a>Java安全-反序列化</h1><h2 id=\"Java-安全-反序列化-原生序列化类函数\"><a href=\"#Java-安全-反序列化-原生序列化类函数\" class=\"headerlink\" title=\"Java 安全 - 反序列化 - 原生序列化类函数\"></a>Java 安全 - 反序列化 - 原生序列化类函数</h2><p>序列化是将 Java 对象转换成字节流的过程。而反序列化是将字节流转换成 Java 对象的<br>过程，java 序列化的数据一般会以标记 (ac ed 00 05) 开头，base64 编码的特征为<br>rO0AB，JAVA 常见的序列化和反序列化的方法有 JAVA 原生序列化和 JSON 类<br>（fastjson、jackson）序列化等。</p>\n<p>1、黑盒发现（流量捕获）<br>2、白盒发现（特征类接口函数）</p>\n<p>1、原生序列化类函数：<br>-SnakeYaml：完整的 YAML1.1 规范 Processor，支持 Java 对象的序列化 &#x2F; 反序列化<br>-XMLDecoder：xml 语言格式序列化类函数接口<br>-ObjectInputStream.readObject ()：任何类如果想要序列化必须实现<br>java.io.Serializable 接口</p>\n<p>2、利用项目：</p>\n<ul>\n<li>Yakit <a href=\"https://yaklang.com/\">https://yaklang.com/</a></li>\n<li><a href=\"https://github.com/frohoff/ysoserial\">https://github.com/frohoff/ysoserial</a></li>\n<li><a href=\"https://github.com/NotSoSecure/SerializedPayloadGenerator\">https://github.com/NotSoSecure/SerializedPayloadGenerator</a></li>\n</ul>\n<h2 id=\"Java-安全-SpringBoot-框架-泄漏-CVE\"><a href=\"#Java-安全-SpringBoot-框架-泄漏-CVE\" class=\"headerlink\" title=\"Java 安全 - SpringBoot 框架 - 泄漏 &amp; CVE\"></a>Java 安全 - SpringBoot 框架 - 泄漏 &amp; CVE</h2><p>SpringBoot Actuator 模块提供了生产级别的功能，比如健康检查，审计，指标收<br>集，HTTP 跟踪等，帮助我们监控和管理 Spring Boot 应用。</p>\n<p>0、检测清单：<br><a href=\"https://github.com/LandGrey/SpringBootVulExploit\">https://github.com/LandGrey/SpringBootVulExploit</a><br>1、黑盒发现（人工识别，BP 插件）<br><a href=\"https://github.com/API-Security/APIKit\">https://github.com/API-Security/APIKit</a><br>1、白盒发现（pom.xml, 引用库）<br>org.springframework.boot spring-boot-starter-actuator</p>\n<p>Actuator 设置全部暴露</p>\n<p>management.endpoints.web.exposure.include&#x3D;*</p>\n<p>&#x2F;actuator&#x2F;env 利用：该端点可以返回全部环境变量以及一些配置信息，其中就包含了数据库配置信息</p>\n<p>heapdump</p>\n<p><strong>利用条件:</strong></p>\n<p>可正常 GET 请求目标 &#x2F;heapdump 或 &#x2F;actuator&#x2F;heapdump 接口</p>\n<p><strong>利用方法:</strong></p>\n<p>1、（1）下载 heapdump</p>\n<p>127.0.0.1:8088&#x2F;actuator&#x2F;heapdump 下载 heapdump 文件，泄露 JAVA 堆 dump 信息：</p>\n<p> （2）heapdump 文件解密</p>\n<p><a href=\"https://github.com/wyzxxz/heapdump_tool\">https://github.com/wyzxxz/heapdump_tool</a></p>\n<p>2、泄漏安全（配置密码，AK&#x2F;SK 等）<br><a href=\"https://github.com/whwlsfb/JDumpSpider\">https://github.com/whwlsfb/JDumpSpider</a><br><a href=\"https://github.com/wyzxxz/heapdump_tool\">https://github.com/wyzxxz/heapdump_tool</a><br>3、漏洞安全（利用类，CVE 漏洞等）</p>\n","text":"Java安全-反序列化Java 安全 - 反序列化 - 原生序列化类函数序列化是将 Java 对象转换成字节流的过程。而反序列化是将字节流转换成 Java 对象...","permalink":"/post/Java安全-反序列化","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"Java安全","slug":"Java安全","count":4,"path":"api/categories/Java安全.json"}],"tags":[{"name":"Java安全","slug":"Java安全","count":4,"path":"api/tags/Java安全.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Java%E5%AE%89%E5%85%A8-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">Java安全-反序列化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java-%E5%AE%89%E5%85%A8-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E5%8E%9F%E7%94%9F%E5%BA%8F%E5%88%97%E5%8C%96%E7%B1%BB%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">Java 安全 - 反序列化 - 原生序列化类函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java-%E5%AE%89%E5%85%A8-SpringBoot-%E6%A1%86%E6%9E%B6-%E6%B3%84%E6%BC%8F-CVE\"><span class=\"toc-text\">Java 安全 - SpringBoot 框架 - 泄漏 &amp; CVE</span></a></li></ol></li></ol>","author":{"name":"Hao","slug":"blog-author","avatar":"https://i.pinimg.com/736x/64/96/6b/64966b30e1c9375e8dbb11146ea9c12f.jpg","link":"/","description":"个人网络安全博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Js逆向","uid":"38398170e5e634f3f46b2c1de62b6b21","slug":"JS逆向","date":"2025-05-17T07:52:28.669Z","updated":"2025-05-17T08:37:37.449Z","comments":true,"path":"api/articles/JS逆向.json","keywords":null,"cover":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/blog%20%E5%9B%BE%E7%89%87/Follow%20me%20for%20more%21%20%23genshin%20%23genshinimpact.jpg","text":"Js逆向JS 分析调试：1，代码的全局搜索 通过数据包找到关键词，并搜索 2，文件流程断点 找到对应数据包 在发起程序中，显示了执行 js 的流程，从下往上执行...","permalink":"/post/JS逆向","photos":[],"count_time":{"symbolsCount":984,"symbolsTime":"1 mins."},"categories":[{"name":"Js安全","slug":"Js安全","count":1,"path":"api/categories/Js安全.json"}],"tags":[{"name":"Js安全","slug":"Js安全","count":1,"path":"api/tags/Js安全.json"}],"author":{"name":"Hao","slug":"blog-author","avatar":"https://i.pinimg.com/736x/64/96/6b/64966b30e1c9375e8dbb11146ea9c12f.jpg","link":"/","description":"个人网络安全博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Java安全-RCE执行,JNDI注入","uid":"405d1bcee462f9653e9b6caa35fc018c","slug":"Java安全-JWT,Swagger 接口,Druid 监控","date":"2025-05-17T07:19:36.267Z","updated":"2025-05-17T07:44:58.811Z","comments":true,"path":"api/articles/Java安全-JWT,Swagger 接口,Druid 监控.json","keywords":null,"cover":"https://myhaoblog.oss-cn-beijing.aliyuncs.com/blog%20%E5%9B%BE%E7%89%87/1b422368462a46b8eeab963766d5d75d.jpg","text":"Java安全-JWT,Swagger 接口,Druid 监控 1，Java 安全 - Druid 监控 - 未授权访问 & 信息泄漏2，Java 安全 - Sw...","permalink":"/post/Java安全-JWT,Swagger 接口,Druid 监控","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Java安全","slug":"Java安全","count":4,"path":"api/categories/Java安全.json"}],"tags":[{"name":"Java安全","slug":"Java安全","count":4,"path":"api/tags/Java安全.json"}],"author":{"name":"Hao","slug":"blog-author","avatar":"https://i.pinimg.com/736x/64/96/6b/64966b30e1c9375e8dbb11146ea9c12f.jpg","link":"/","description":"个人网络安全博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}